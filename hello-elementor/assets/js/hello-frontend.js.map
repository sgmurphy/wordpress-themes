{"version":3,"file":"hello-frontend.js","mappings":"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","sources":["webpack://elementor-hello-theme/./assets/dev/js/frontend/hello-frontend.js"],"sourcesContent":["class elementorHelloThemeHandler {\n    constructor() {\n        this.initSettings();\n        this.initElements();\n        this.bindEvents();\n    }\n\n    initSettings() {\n        this.settings = {\n            selectors: {\n                menuToggle: '.site-header .site-navigation-toggle',\n                menuToggleHolder: '.site-header .site-navigation-toggle-holder',\n                dropdownMenu: '.site-header .site-navigation-dropdown',\n            },\n        };\n    }\n\n    initElements() {\n        this.elements = {\n            window,\n            menuToggle: document.querySelector( this.settings.selectors.menuToggle ),\n            menuToggleHolder: document.querySelector( this.settings.selectors.menuToggleHolder ),\n            dropdownMenu: document.querySelector( this.settings.selectors.dropdownMenu ),\n        };\n    }\n\n    bindEvents() {\n        if ( ! this.elements.menuToggleHolder || this.elements.menuToggleHolder?.classList.contains( 'hide' ) ) {\n            return;\n        }\n\n        this.elements.menuToggle.addEventListener( 'click', () => this.handleMenuToggle() );\n        this.elements.menuToggle.addEventListener( 'keyup', ( event ) => {\n            const ENTER_KEY = 13;\n            const SPACE_KEY = 32;\n\n            if ( ENTER_KEY === event.keyCode || SPACE_KEY === event.keyCode ) {\n                event.currentTarget.click();\n            }\n        } );\n\n        this.elements.dropdownMenu.querySelectorAll( '.menu-item-has-children > a' )\n            .forEach( ( anchorElement ) => anchorElement.addEventListener( 'click', ( event ) => this.handleMenuChildren( event ) ) );\n    }\n\n    closeMenuItems() {\n        this.elements.menuToggleHolder.classList.remove( 'elementor-active' );\n        this.elements.window.removeEventListener( 'resize', () => this.closeMenuItems() );\n    }\n\n    handleMenuToggle() {\n        const isDropdownVisible = ! this.elements.menuToggleHolder.classList.contains( 'elementor-active' );\n\n        this.elements.menuToggle.setAttribute( 'aria-expanded', isDropdownVisible );\n        this.elements.dropdownMenu.setAttribute( 'aria-hidden', ! isDropdownVisible );\n        this.elements.menuToggleHolder.classList.toggle( 'elementor-active', isDropdownVisible );\n\n        // Always close all sub active items.\n        this.elements.dropdownMenu.querySelectorAll( '.elementor-active' ).forEach( ( item ) => item.classList.remove( 'elementor-active' ) );\n\n        if ( isDropdownVisible ) {\n            this.elements.window.addEventListener( 'resize', () => this.closeMenuItems() );\n        } else {\n            this.elements.window.removeEventListener( 'resize', () => this.closeMenuItems() );\n        }\n    }\n\n    handleMenuChildren( event ) {\n        const anchor = event.currentTarget;\n        const parentLi = anchor.parentElement;\n\n        if ( ! parentLi?.classList ) {\n            return;\n        }\n\n        parentLi.classList.toggle( 'elementor-active' );\n    }\n}\n\ndocument.addEventListener( 'DOMContentLoaded', () => {\n    new elementorHelloThemeHandler();\n} );\n"],"names":["elementorHelloThemeHandler","constructor","initSettings","initElements","bindEvents","settings","selectors","menuToggle","menuToggleHolder","dropdownMenu","elements","window","document","querySelector","_this$elements$menuTo","classList","contains","addEventListener","handleMenuToggle","event","ENTER_KEY","SPACE_KEY","keyCode","currentTarget","click","querySelectorAll","forEach","anchorElement","handleMenuChildren","closeMenuItems","remove","removeEventListener","isDropdownVisible","setAttribute","toggle","item","anchor","parentLi","parentElement"],"sourceRoot":""}